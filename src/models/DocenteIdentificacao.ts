import mongoose from "mongoose";

const DocenteIdentificacao = new mongoose.Schema({
  tipoDeRegistro: { type: String, required: false },
  codigoDeEscolaInep: { type: String, required: false },
  codigoDaPessoaFisicaNoSistemaProprio: { type: Number, required: false },
  identificacaoUnicaInep: { type: Number, required: false },
  numeroDoCPF: { type: String, required: false },
  nomeCompleto: { type: String, required: false },
  dataDeNascimento: { type: Number, required: false },
  filiacao: { type: Number, required: false },
  filiacao1PreferencialmenteONomeDaMae: { type: String, required: false },
  filiacao2PreferencialmenteONomeDoPai: { type: String, required: false },
  sexo: { type: Number, required: false },
  corRaca: { type: Number, required: false },
  nacionalidade: { type: Number, required: false },
  paisDeNacionalidade: { type: Number, required: false },
  municipioDeNascimento: { type: Number, required: false },
  pessoaFisicaComDeficienciaTranstornoDoEspectroAutistaOuAltasHabilidadesSuperdotacao:
    { type: Number, required: false },
  cegueira: { type: Number, required: false },
  baixaVisao: { type: Number, required: false },
  visaoMonocular: { type: Number, required: false },
  surdez: { type: Number, required: false },
  deficienciaAuditiva: { type: Number, required: false },
  surdocegueira: { type: Number, required: false },
  deficienciaFisica: { type: Number, required: false },
  deficienciaIntelectual: { type: Number, required: false },
  deficienciaMultipla: { type: Number, required: false },
  transtornoDoEspectroAutista: { type: Number, required: false },
  altasHabilidadesSuperdotacao: { type: Number, required: false },
  auxilioLedor: { type: Number, required: false },
  auxilioTranscricao: { type: Number, required: false },
  guiaInterprete: { type: Number, required: false },
  tradutorInterpreteDeLibras: { type: Number, required: false },
  leituraLabial: { type: Number, required: false },
  provaAmpliadaFonte18: { type: Number, required: false },
  provaSuperampliadaFonte24: { type: Number, required: false },
  cDComAudioParaDeficienteVisual: { type: Number, required: false },
  provaDeLinguaPortuguesaComoSegundaLinguaParaSurdosEDeficientesAuditivos: {
    type: Number,
    required: false,
  },
  provaEmVideoEmLibras: { type: Number, required: false },
  materialDidaticoEProvaEmBraille: { type: Number, required: false },
  nenhum: { type: Number, required: false },
  numeroDaMatriculaDaCertidaoDeNascimentoCertidaoNova: {
    type: String,
    required: false,
  },
  paisDeResidencia: { type: Number, required: false },
  cEP: { type: String, required: false },
  municipioDeResidencia: { type: Number, required: false },
  localizacaoZonaDeResidencia: { type: Number, required: false },
  localizacaoDiferenciadaDeResidencia: { type: Number, required: false },
  maiorNivelDeEscolaridadeConcluido: { type: Number, required: false },
  tipoDeEnsinoMedioCursado: { type: Number, required: false },
  codigoDoCurso1: { type: String, required: false },
  anoDeConclusao1: { type: Number, required: false },
  instituicaoDeEducacaoSuperior1: { type: Number, required: false },
  codigoDoCurso2: { type: String, required: false },
  anoDeConclusao2: { type: Number, required: false },
  instituicaoDeEducacaoSuperior2: { type: Number, required: false },
  codigoDoCurso3: { type: String, required: false },
  anoDeConclusao3: { type: Number, required: false },
  instituicaoDeEducacaoSuperior3: { type: Number, required: false },
  areaDoConhecimentoComponentesCurriculares1: { type: Number, required: false },
  areaDoConhecimentoComponentesCurriculares2: { type: Number, required: false },
  areaDoConhecimentoComponentesCurriculares3: { type: Number, required: false },
  tipoDePosgraduacao1: { type: Number, required: false },
  areaDaPosgraduacao1: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao1: { type: Number, required: false },
  tipoDePosgraduacao2: { type: Number, required: false },
  areaDaPosgraduacao2: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao2: { type: Number, required: false },
  tipoDePosgraduacao3: { type: Number, required: false },
  areaDaPosgraduacao3: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao3: { type: Number, required: false },
  tipoDePosgraduacao4: { type: Number, required: false },
  areaDaPosgraduacao4: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao4: { type: Number, required: false },
  tipoDePosgraduacao5: { type: Number, required: false },
  areaDaPosgraduacao5: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao5: { type: Number, required: false },
  tipoDePosgraduacao6: { type: Number, required: false },
  areaDaPosgraduacao6: { type: Number, required: false },
  anoDeConclusaoDaPosgraduacao6: { type: Number, required: false },
  naoTemPosgraduacaoConcluida: { type: Number, required: false },
  creche0A3Anos: { type: Number, required: false },
  preescola4E5Anos: { type: Number, required: false },
  anosIniciaisDoEnsinoFundamental: { type: Number, required: false },
  anosFinaisDoEnsinoFundamental: { type: Number, required: false },
  ensinoMedio: { type: Number, required: false },
  educacaoDeJovensEAdultos: { type: Number, required: false },
  educacaoEspecial: { type: Number, required: false },
  educacaoIndigena: { type: Number, required: false },
  educacaoDoCampo: { type: Number, required: false },
  educacaoAmbiental: { type: Number, required: false },
  educacaoEmDireitosHumanos: { type: Number, required: false },
  educacaoBilingueDeSurdos: { type: Number, required: false },
  educacaoETecnologiaDeInformacaoEComunicacaoTIC: {
    type: Number,
    required: false,
  },
  generoEDiversidadeSexual: { type: Number, required: false },
  direitosDeCriancaEAdolescente: { type: Number, required: false },
  educacaoParaAsRelacoesEtnicoraciaisEHistoriaECulturaAfrobrasileiraEAfricana: {
    type: Number,
    required: false,
  },
  gestaoEscolar: { type: Number, required: false },
  outros: { type: Number, required: false },
  enderecoEletronicoEmail: { type: String, required: false },
});

export default mongoose.model("DocenteIdentificacao", DocenteIdentificacao);
